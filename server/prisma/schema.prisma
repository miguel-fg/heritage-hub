datasource db {
    provider    = "postgresql"
    url         = env("DATABASE_URL")
}

generator client {
    provider    = "prisma-client-js"
}

model Model {
    id              String      @id @default(nanoid(16)) @db.Uuid
    ownerId         String      @db.Uuid
    owner           User        @relation(fields: [ownerId], references: [id], onDelete: Cascade)
    accNum          String?
    name            String
    caption         String
    description     String
    provenance      String?
    materials       Material[]
    tags            Tag[]
    modelPath       String
    thumbnailPath   String
    multimediaPath  String[]
    downloadable    Boolean     @default(true)
    createdAt       DateTime    @default(now())

    dimensions      Dimension[]
    hotspots        Hotspot[]
}

model Hotspot {
    id        Int         @id @default(autoincrement())
    model     Model       @relation(fields: [modelId], references: [id], onDelete: Cascade)
    modelId   String      @db.Uuid

    label     String
    content   String

    posX      Float
    posY      Float
    posZ      Float

    norX      Float
    norY      Float
    norZ      Float

    quatX     Float
    quatY     Float
    quatZ     Float
    quatW     Float
}

model Tag {
    id        Int        @id @default(autoincrement())
    name      String     @unique
    models    Model[]
}

model Material {
    id        Int        @id @default(autoincrement())
    name      String     @unique
    models    Model[]
}

model Dimension {
    id        Int        @id @default(autoincrement())
    model     Model      @relation(fields: [modelId], references: [id], onDelete: Cascade)
    modelId   String     @db.Uuid

    type      DimensionType
    value     Float
    unit      String
}

model User {
    id            String            @id @default(nanoid(16)) @db.Uuid
    casId         String            @unique
    authType      String?
    displayName   String?
    email         String?
    permissions   PermissionLevel   @default(STANDARD)
    sessions      Session[]
    models        Model[]
    otcs          OneTimeCode[]
}

model Session {
    id          String      @id
    userId      String      @db.Uuid
    user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
    expiresAt   DateTime
}

model OneTimeCode {
    code        String  @id
    userId      String  @db.Uuid
    user        User    @relation(fields: [userId], references: [id])
    expiresAt   DateTime
}

enum PermissionLevel {
    RESTRICTED
    STANDARD
    FULL
    ADMIN
}

enum DimensionType {
    WIDTH
    HEIGHT
    DEPTH
    WEIGHT
    VOLUME
}